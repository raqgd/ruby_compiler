Terminals unused in grammar

   DEF
   RETURN


State 0 conflicts: 7 shift/reduce
State 11 conflicts: 1 shift/reduce
State 32 conflicts: 7 shift/reduce
State 33 conflicts: 7 shift/reduce
State 45 conflicts: 1 shift/reduce
State 49 conflicts: 7 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts opt_newline END_OF_FILE

    2 stmts: /* empty */
    3      | stmts stmt
    4      | stmt

    5 stmt: identifier ASSIGN expr opt_newline
    6     | expr opt_newline
    7     | IF expr THEN stmts ELSE stmts END
    8     | IF expr THEN stmts END
    9     | WHILE expr DO stmts END

   10 expr: NUM
   11     | FLOAT
   12     | BOOL
   13     | STRING
   14     | identifier
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr MUL expr
   18     | expr DIV expr
   19     | expr EQ expr
   20     | expr NEQ expr
   21     | expr LT expr
   22     | expr GT expr
   23     | expr LE expr
   24     | expr GE expr

   25 identifier: ID

   26 opt_newline: /* empty */
   27            | NEWLINE


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 10
BOOL (259) 12
STRING (260) 13
ID (261) 25
FLOAT (262) 11
IF (263) 7 8
ELSE (264) 7
WHILE (265) 9
DEF (266)
RETURN (267)
THEN (268) 7 8
DO (269) 9
END (270) 7 8 9
EQ (271) 19
NEQ (272) 20
LT (273) 21
GT (274) 22
LE (275) 23
GE (276) 24
PLUS (277) 15
MINUS (278) 16
MUL (279) 17
DIV (280) 18
ASSIGN (281) 5
NEWLINE (282) 27
END_OF_FILE (283) 1
LOWER_THAN_ELSE (284)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
stmts (32)
    on left: 2 3 4, on right: 1 3 7 8 9
stmt (33)
    on left: 5 6 7 8 9, on right: 3 4
expr (34)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24, on right:
    5 6 7 8 9 15 16 17 18 19 20 21 22 23 24
identifier (35)
    on left: 25, on right: 5 14
opt_newline (36)
    on left: 26 27, on right: 1 5 6


state 0

    0 $accept: . program $end

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7

    NUM       [reduce using rule 2 (stmts)]
    BOOL      [reduce using rule 2 (stmts)]
    STRING    [reduce using rule 2 (stmts)]
    ID        [reduce using rule 2 (stmts)]
    FLOAT     [reduce using rule 2 (stmts)]
    IF        [reduce using rule 2 (stmts)]
    WHILE     [reduce using rule 2 (stmts)]
    $default  reduce using rule 2 (stmts)

    program     go to state 8
    stmts       go to state 9
    stmt        go to state 10
    expr        go to state 11
    identifier  go to state 12


state 1

   10 expr: NUM .

    $default  reduce using rule 10 (expr)


state 2

   12 expr: BOOL .

    $default  reduce using rule 12 (expr)


state 3

   13 expr: STRING .

    $default  reduce using rule 13 (expr)


state 4

   25 identifier: ID .

    $default  reduce using rule 25 (identifier)


state 5

   11 expr: FLOAT .

    $default  reduce using rule 11 (expr)


state 6

    7 stmt: IF . expr THEN stmts ELSE stmts END
    8     | IF . expr THEN stmts END

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 13
    identifier  go to state 14


state 7

    9 stmt: WHILE . expr DO stmts END

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 15
    identifier  go to state 14


state 8

    0 $accept: program . $end

    $end  shift, and go to state 16


state 9

    1 program: stmts . opt_newline END_OF_FILE
    3 stmts: stmts . stmt

    NUM      shift, and go to state 1
    BOOL     shift, and go to state 2
    STRING   shift, and go to state 3
    ID       shift, and go to state 4
    FLOAT    shift, and go to state 5
    IF       shift, and go to state 6
    WHILE    shift, and go to state 7
    NEWLINE  shift, and go to state 17

    $default  reduce using rule 26 (opt_newline)

    stmt         go to state 18
    expr         go to state 11
    identifier   go to state 12
    opt_newline  go to state 19


state 10

    4 stmts: stmt .

    $default  reduce using rule 4 (stmts)


state 11

    6 stmt: expr . opt_newline
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    EQ       shift, and go to state 20
    NEQ      shift, and go to state 21
    LT       shift, and go to state 22
    GT       shift, and go to state 23
    LE       shift, and go to state 24
    GE       shift, and go to state 25
    PLUS     shift, and go to state 26
    MINUS    shift, and go to state 27
    MUL      shift, and go to state 28
    DIV      shift, and go to state 29
    NEWLINE  shift, and go to state 17

    NEWLINE   [reduce using rule 26 (opt_newline)]
    $default  reduce using rule 26 (opt_newline)

    opt_newline  go to state 30


state 12

    5 stmt: identifier . ASSIGN expr opt_newline
   14 expr: identifier .

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 14 (expr)


state 13

    7 stmt: IF expr . THEN stmts ELSE stmts END
    8     | IF expr . THEN stmts END
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    THEN   shift, and go to state 32
    EQ     shift, and go to state 20
    NEQ    shift, and go to state 21
    LT     shift, and go to state 22
    GT     shift, and go to state 23
    LE     shift, and go to state 24
    GE     shift, and go to state 25
    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29


state 14

   14 expr: identifier .

    $default  reduce using rule 14 (expr)


state 15

    9 stmt: WHILE expr . DO stmts END
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    DO     shift, and go to state 33
    EQ     shift, and go to state 20
    NEQ    shift, and go to state 21
    LT     shift, and go to state 22
    GT     shift, and go to state 23
    LE     shift, and go to state 24
    GE     shift, and go to state 25
    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29


state 16

    0 $accept: program $end .

    $default  accept


state 17

   27 opt_newline: NEWLINE .

    $default  reduce using rule 27 (opt_newline)


state 18

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


state 19

    1 program: stmts opt_newline . END_OF_FILE

    END_OF_FILE  shift, and go to state 34


state 20

   19 expr: expr EQ . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 35
    identifier  go to state 14


state 21

   20 expr: expr NEQ . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 36
    identifier  go to state 14


state 22

   21 expr: expr LT . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 37
    identifier  go to state 14


state 23

   22 expr: expr GT . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 38
    identifier  go to state 14


state 24

   23 expr: expr LE . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 39
    identifier  go to state 14


state 25

   24 expr: expr GE . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 40
    identifier  go to state 14


state 26

   15 expr: expr PLUS . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 41
    identifier  go to state 14


state 27

   16 expr: expr MINUS . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 42
    identifier  go to state 14


state 28

   17 expr: expr MUL . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 43
    identifier  go to state 14


state 29

   18 expr: expr DIV . expr

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 44
    identifier  go to state 14


state 30

    6 stmt: expr opt_newline .

    $default  reduce using rule 6 (stmt)


state 31

    5 stmt: identifier ASSIGN . expr opt_newline

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5

    expr        go to state 45
    identifier  go to state 14


state 32

    7 stmt: IF expr THEN . stmts ELSE stmts END
    8     | IF expr THEN . stmts END

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7

    NUM       [reduce using rule 2 (stmts)]
    BOOL      [reduce using rule 2 (stmts)]
    STRING    [reduce using rule 2 (stmts)]
    ID        [reduce using rule 2 (stmts)]
    FLOAT     [reduce using rule 2 (stmts)]
    IF        [reduce using rule 2 (stmts)]
    WHILE     [reduce using rule 2 (stmts)]
    $default  reduce using rule 2 (stmts)

    stmts       go to state 46
    stmt        go to state 10
    expr        go to state 11
    identifier  go to state 12


state 33

    9 stmt: WHILE expr DO . stmts END

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7

    NUM       [reduce using rule 2 (stmts)]
    BOOL      [reduce using rule 2 (stmts)]
    STRING    [reduce using rule 2 (stmts)]
    ID        [reduce using rule 2 (stmts)]
    FLOAT     [reduce using rule 2 (stmts)]
    IF        [reduce using rule 2 (stmts)]
    WHILE     [reduce using rule 2 (stmts)]
    $default  reduce using rule 2 (stmts)

    stmts       go to state 47
    stmt        go to state 10
    expr        go to state 11
    identifier  go to state 12


state 34

    1 program: stmts opt_newline END_OF_FILE .

    $default  reduce using rule 1 (program)


state 35

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   19     | expr EQ expr .
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29

    $default  reduce using rule 19 (expr)


state 36

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   20     | expr NEQ expr .
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29

    $default  reduce using rule 20 (expr)


state 37

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   21     | expr LT expr .
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29

    $default  reduce using rule 21 (expr)


state 38

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   22     | expr GT expr .
   23     | expr . LE expr
   24     | expr . GE expr

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29

    $default  reduce using rule 22 (expr)


state 39

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   23     | expr LE expr .
   24     | expr . GE expr

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29

    $default  reduce using rule 23 (expr)


state 40

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr
   24     | expr GE expr .

    PLUS   shift, and go to state 26
    MINUS  shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29

    $default  reduce using rule 24 (expr)


state 41

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 15 (expr)


state 42

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 16 (expr)


state 43

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   17     | expr MUL expr .
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    $default  reduce using rule 17 (expr)


state 44

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    $default  reduce using rule 18 (expr)


state 45

    5 stmt: identifier ASSIGN expr . opt_newline
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . EQ expr
   20     | expr . NEQ expr
   21     | expr . LT expr
   22     | expr . GT expr
   23     | expr . LE expr
   24     | expr . GE expr

    EQ       shift, and go to state 20
    NEQ      shift, and go to state 21
    LT       shift, and go to state 22
    GT       shift, and go to state 23
    LE       shift, and go to state 24
    GE       shift, and go to state 25
    PLUS     shift, and go to state 26
    MINUS    shift, and go to state 27
    MUL      shift, and go to state 28
    DIV      shift, and go to state 29
    NEWLINE  shift, and go to state 17

    NEWLINE   [reduce using rule 26 (opt_newline)]
    $default  reduce using rule 26 (opt_newline)

    opt_newline  go to state 48


state 46

    3 stmts: stmts . stmt
    7 stmt: IF expr THEN stmts . ELSE stmts END
    8     | IF expr THEN stmts . END

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5
    IF      shift, and go to state 6
    ELSE    shift, and go to state 49
    WHILE   shift, and go to state 7
    END     shift, and go to state 50

    stmt        go to state 18
    expr        go to state 11
    identifier  go to state 12


state 47

    3 stmts: stmts . stmt
    9 stmt: WHILE expr DO stmts . END

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    END     shift, and go to state 51

    stmt        go to state 18
    expr        go to state 11
    identifier  go to state 12


state 48

    5 stmt: identifier ASSIGN expr opt_newline .

    $default  reduce using rule 5 (stmt)


state 49

    7 stmt: IF expr THEN stmts ELSE . stmts END

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7

    NUM       [reduce using rule 2 (stmts)]
    BOOL      [reduce using rule 2 (stmts)]
    STRING    [reduce using rule 2 (stmts)]
    ID        [reduce using rule 2 (stmts)]
    FLOAT     [reduce using rule 2 (stmts)]
    IF        [reduce using rule 2 (stmts)]
    WHILE     [reduce using rule 2 (stmts)]
    $default  reduce using rule 2 (stmts)

    stmts       go to state 52
    stmt        go to state 10
    expr        go to state 11
    identifier  go to state 12


state 50

    8 stmt: IF expr THEN stmts END .

    $default  reduce using rule 8 (stmt)


state 51

    9 stmt: WHILE expr DO stmts END .

    $default  reduce using rule 9 (stmt)


state 52

    3 stmts: stmts . stmt
    7 stmt: IF expr THEN stmts ELSE stmts . END

    NUM     shift, and go to state 1
    BOOL    shift, and go to state 2
    STRING  shift, and go to state 3
    ID      shift, and go to state 4
    FLOAT   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    END     shift, and go to state 53

    stmt        go to state 18
    expr        go to state 11
    identifier  go to state 12


state 53

    7 stmt: IF expr THEN stmts ELSE stmts END .

    $default  reduce using rule 7 (stmt)
